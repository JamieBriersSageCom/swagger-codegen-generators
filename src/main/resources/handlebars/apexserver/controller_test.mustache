@isTest
private class {{classname}}Test {
    private static string URI = TODO;
    private static string DOMAIN = TODO;
{{#operations}}{{#operation}}


    @isTest
    private static void When{{operationId}}CalledThenReturnStatusCode200() {
        createRestContext{{httpMethod}}();

        configureController(RequestType.HTTP{{httpMethod}}).execute();

        System.assertEquals(200, RestContext.response.statusCode);
    }
{{/operation}}


{{#operation}}
    public static void createRestContext{{httpMethod}}(){
        RestContext.request = new RestRequest();
        RestContext.response = new RestResponse();
{{#hasParams}}
    {{#allParams}}
        RestContext.request.params.put('{{paramName}}', {{{example}}});
    {{/allParams}}
{{/hasParams}}

        RestContext.request.addHeader('Accept', 'application/json');
        RestContext.request.requestURI = URI;

    }



{{/operation}}

    private static AbstractBaseController configureController(RequestType reqType){
        HttpRequest request = new HttpRequest()
            .setRequestType(reqType);
        HttpResponse response = new HttpResponse();
        return new {{classname}}(URI)
            .setControllerDomain(DOMAIN)
            .configure(request, response);
    }
{{/operations}}
}